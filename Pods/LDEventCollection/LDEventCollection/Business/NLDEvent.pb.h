// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class ABTestMsg;
@class ABTestMsgBuilder;
@class AppColdStartMsg;
@class AppColdStartMsgBuilder;
@class AppEnterForeBackgroundMsg;
@class AppEnterForeBackgroundMsgBuilder;
@class AppInstallationMsg;
@class AppInstallationMsgBuilder;
@class AppUrlMsg;
@class AppUrlMsgBuilder;
@class ButtonViewMsg;
@class ButtonViewMsgBuilder;
@class ListItemClickMsg;
@class ListItemClickMsgBuilder;
@class ListScanningMsg;
@class ListScanningMsgBuilder;
@class LocationMsg;
@class LocationMsgBuilder;
@class MapItem;
@class MapItemBuilder;
@class PageMsg;
@class PageMsgBuilder;
@class PushMsg;
@class PushMsgBuilder;
@class ScrollViewMsg;
@class ScrollViewMsgBuilder;
@class UserOptionalMsg;
@class UserOptionalMsgBuilder;
@class ViewItem;
@class ViewItemBuilder;
@class ViewScrollMsg;
@class ViewScrollMsgBuilder;
@class WebViewMsg;
@class WebViewMsgBuilder;



@interface NldeventRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define AppColdStartMsg_eventName @"eventName"
#define AppColdStartMsg_eventTime @"eventTime"
#define AppColdStartMsg_sessionId @"sessionId"
#define AppColdStartMsg_appKey @"appKey"
#define AppColdStartMsg_deviceId @"deviceId"
#define AppColdStartMsg_idfa @"idfa"
#define AppColdStartMsg_channel @"channel"
#define AppColdStartMsg_appBundle @"appBundle"
#define AppColdStartMsg_appVersion @"appVersion"
#define AppColdStartMsg_appBuildVersion @"appBuildVersion"
#define AppColdStartMsg_systemName @"systemName"
#define AppColdStartMsg_systemVersion @"systemVersion"
#define AppColdStartMsg_avalibleDisk @"avalibleDisk"
#define AppColdStartMsg_totalDisk @"totalDisk"
#define AppColdStartMsg_appMemory @"appMemory"
#define AppColdStartMsg_avalibleMemory @"avalibleMemory"
#define AppColdStartMsg_totalMemory @"totalMemory"
#define AppColdStartMsg_batteryLevel @"batteryLevel"
#define AppColdStartMsg_carrier @"carrier"
#define AppColdStartMsg_deviceModel @"deviceModel"
#define AppColdStartMsg_screenResolution @"screenResolution"
@interface AppColdStartMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasIdfa_:1;
  BOOL hasChannel_:1;
  BOOL hasAppBundle_:1;
  BOOL hasAppVersion_:1;
  BOOL hasAppBuildVersion_:1;
  BOOL hasSystemName_:1;
  BOOL hasSystemVersion_:1;
  BOOL hasAvalibleDisk_:1;
  BOOL hasTotalDisk_:1;
  BOOL hasAppMemory_:1;
  BOOL hasAvalibleMemory_:1;
  BOOL hasTotalMemory_:1;
  BOOL hasBatteryLevel_:1;
  BOOL hasCarrier_:1;
  BOOL hasDeviceModel_:1;
  BOOL hasScreenResolution_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* idfa;
  NSString* channel;
  NSString* appBundle;
  NSString* appVersion;
  NSString* appBuildVersion;
  NSString* systemName;
  NSString* systemVersion;
  NSString* avalibleDisk;
  NSString* totalDisk;
  NSString* appMemory;
  NSString* avalibleMemory;
  NSString* totalMemory;
  NSString* batteryLevel;
  NSString* carrier;
  NSString* deviceModel;
  NSString* screenResolution;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasIdfa;
- (BOOL) hasChannel;
- (BOOL) hasAppBundle;
- (BOOL) hasAppVersion;
- (BOOL) hasAppBuildVersion;
- (BOOL) hasSystemName;
- (BOOL) hasSystemVersion;
- (BOOL) hasAvalibleDisk;
- (BOOL) hasTotalDisk;
- (BOOL) hasAppMemory;
- (BOOL) hasAvalibleMemory;
- (BOOL) hasTotalMemory;
- (BOOL) hasBatteryLevel;
- (BOOL) hasCarrier;
- (BOOL) hasDeviceModel;
- (BOOL) hasScreenResolution;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* idfa;
@property (readonly, strong) NSString* channel;
@property (readonly, strong) NSString* appBundle;
@property (readonly, strong) NSString* appVersion;
@property (readonly, strong) NSString* appBuildVersion;
@property (readonly, strong) NSString* systemName;
@property (readonly, strong) NSString* systemVersion;
@property (readonly, strong) NSString* avalibleDisk;
@property (readonly, strong) NSString* totalDisk;
@property (readonly, strong) NSString* appMemory;
@property (readonly, strong) NSString* avalibleMemory;
@property (readonly, strong) NSString* totalMemory;
@property (readonly, strong) NSString* batteryLevel;
@property (readonly, strong) NSString* carrier;
@property (readonly, strong) NSString* deviceModel;
@property (readonly, strong) NSString* screenResolution;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AppColdStartMsgBuilder*) builder;
+ (AppColdStartMsgBuilder*) builder;
+ (AppColdStartMsgBuilder*) builderWithPrototype:(AppColdStartMsg*) prototype;
- (AppColdStartMsgBuilder*) toBuilder;

+ (AppColdStartMsg*) parseFromData:(NSData*) data;
+ (AppColdStartMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppColdStartMsg*) parseFromInputStream:(NSInputStream*) input;
+ (AppColdStartMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppColdStartMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AppColdStartMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AppColdStartMsgBuilder : PBGeneratedMessageBuilder {
@private
  AppColdStartMsg* resultAppColdStartMsg;
}

- (AppColdStartMsg*) defaultInstance;

- (AppColdStartMsgBuilder*) clear;
- (AppColdStartMsgBuilder*) clone;

- (AppColdStartMsg*) build;
- (AppColdStartMsg*) buildPartial;

- (AppColdStartMsgBuilder*) mergeFrom:(AppColdStartMsg*) other;
- (AppColdStartMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AppColdStartMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (AppColdStartMsgBuilder*) setEventName:(NSString*) value;
- (AppColdStartMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (AppColdStartMsgBuilder*) setEventTime:(NSString*) value;
- (AppColdStartMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (AppColdStartMsgBuilder*) setSessionId:(NSString*) value;
- (AppColdStartMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (AppColdStartMsgBuilder*) setAppKey:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AppColdStartMsgBuilder*) setDeviceId:(NSString*) value;
- (AppColdStartMsgBuilder*) clearDeviceId;

- (BOOL) hasIdfa;
- (NSString*) idfa;
- (AppColdStartMsgBuilder*) setIdfa:(NSString*) value;
- (AppColdStartMsgBuilder*) clearIdfa;

- (BOOL) hasChannel;
- (NSString*) channel;
- (AppColdStartMsgBuilder*) setChannel:(NSString*) value;
- (AppColdStartMsgBuilder*) clearChannel;

- (BOOL) hasAppBundle;
- (NSString*) appBundle;
- (AppColdStartMsgBuilder*) setAppBundle:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAppBundle;

- (BOOL) hasAppVersion;
- (NSString*) appVersion;
- (AppColdStartMsgBuilder*) setAppVersion:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAppVersion;

- (BOOL) hasAppBuildVersion;
- (NSString*) appBuildVersion;
- (AppColdStartMsgBuilder*) setAppBuildVersion:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAppBuildVersion;

- (BOOL) hasSystemName;
- (NSString*) systemName;
- (AppColdStartMsgBuilder*) setSystemName:(NSString*) value;
- (AppColdStartMsgBuilder*) clearSystemName;

- (BOOL) hasSystemVersion;
- (NSString*) systemVersion;
- (AppColdStartMsgBuilder*) setSystemVersion:(NSString*) value;
- (AppColdStartMsgBuilder*) clearSystemVersion;

- (BOOL) hasAvalibleDisk;
- (NSString*) avalibleDisk;
- (AppColdStartMsgBuilder*) setAvalibleDisk:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAvalibleDisk;

- (BOOL) hasTotalDisk;
- (NSString*) totalDisk;
- (AppColdStartMsgBuilder*) setTotalDisk:(NSString*) value;
- (AppColdStartMsgBuilder*) clearTotalDisk;

- (BOOL) hasAppMemory;
- (NSString*) appMemory;
- (AppColdStartMsgBuilder*) setAppMemory:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAppMemory;

- (BOOL) hasAvalibleMemory;
- (NSString*) avalibleMemory;
- (AppColdStartMsgBuilder*) setAvalibleMemory:(NSString*) value;
- (AppColdStartMsgBuilder*) clearAvalibleMemory;

- (BOOL) hasTotalMemory;
- (NSString*) totalMemory;
- (AppColdStartMsgBuilder*) setTotalMemory:(NSString*) value;
- (AppColdStartMsgBuilder*) clearTotalMemory;

- (BOOL) hasBatteryLevel;
- (NSString*) batteryLevel;
- (AppColdStartMsgBuilder*) setBatteryLevel:(NSString*) value;
- (AppColdStartMsgBuilder*) clearBatteryLevel;

- (BOOL) hasCarrier;
- (NSString*) carrier;
- (AppColdStartMsgBuilder*) setCarrier:(NSString*) value;
- (AppColdStartMsgBuilder*) clearCarrier;

- (BOOL) hasDeviceModel;
- (NSString*) deviceModel;
- (AppColdStartMsgBuilder*) setDeviceModel:(NSString*) value;
- (AppColdStartMsgBuilder*) clearDeviceModel;

- (BOOL) hasScreenResolution;
- (NSString*) screenResolution;
- (AppColdStartMsgBuilder*) setScreenResolution:(NSString*) value;
- (AppColdStartMsgBuilder*) clearScreenResolution;
@end

#define AppEnterForeBackgroundMsg_eventName @"eventName"
#define AppEnterForeBackgroundMsg_eventTime @"eventTime"
#define AppEnterForeBackgroundMsg_sessionId @"sessionId"
#define AppEnterForeBackgroundMsg_appKey @"appKey"
#define AppEnterForeBackgroundMsg_deviceId @"deviceId"
#define AppEnterForeBackgroundMsg_appMemory @"appMemory"
#define AppEnterForeBackgroundMsg_avalibleMemory @"avalibleMemory"
#define AppEnterForeBackgroundMsg_avalibleDisk @"avalibleDisk"
#define AppEnterForeBackgroundMsg_channel @"channel"
@interface AppEnterForeBackgroundMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasAppMemory_:1;
  BOOL hasAvalibleMemory_:1;
  BOOL hasAvalibleDisk_:1;
  BOOL hasChannel_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* appMemory;
  NSString* avalibleMemory;
  NSString* avalibleDisk;
  NSString* channel;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasAppMemory;
- (BOOL) hasAvalibleMemory;
- (BOOL) hasAvalibleDisk;
- (BOOL) hasChannel;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* appMemory;
@property (readonly, strong) NSString* avalibleMemory;
@property (readonly, strong) NSString* avalibleDisk;
@property (readonly, strong) NSString* channel;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AppEnterForeBackgroundMsgBuilder*) builder;
+ (AppEnterForeBackgroundMsgBuilder*) builder;
+ (AppEnterForeBackgroundMsgBuilder*) builderWithPrototype:(AppEnterForeBackgroundMsg*) prototype;
- (AppEnterForeBackgroundMsgBuilder*) toBuilder;

+ (AppEnterForeBackgroundMsg*) parseFromData:(NSData*) data;
+ (AppEnterForeBackgroundMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppEnterForeBackgroundMsg*) parseFromInputStream:(NSInputStream*) input;
+ (AppEnterForeBackgroundMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppEnterForeBackgroundMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AppEnterForeBackgroundMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AppEnterForeBackgroundMsgBuilder : PBGeneratedMessageBuilder {
@private
  AppEnterForeBackgroundMsg* resultAppEnterForeBackgroundMsg;
}

- (AppEnterForeBackgroundMsg*) defaultInstance;

- (AppEnterForeBackgroundMsgBuilder*) clear;
- (AppEnterForeBackgroundMsgBuilder*) clone;

- (AppEnterForeBackgroundMsg*) build;
- (AppEnterForeBackgroundMsg*) buildPartial;

- (AppEnterForeBackgroundMsgBuilder*) mergeFrom:(AppEnterForeBackgroundMsg*) other;
- (AppEnterForeBackgroundMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AppEnterForeBackgroundMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (AppEnterForeBackgroundMsgBuilder*) setEventName:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (AppEnterForeBackgroundMsgBuilder*) setEventTime:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (AppEnterForeBackgroundMsgBuilder*) setSessionId:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (AppEnterForeBackgroundMsgBuilder*) setAppKey:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AppEnterForeBackgroundMsgBuilder*) setDeviceId:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearDeviceId;

- (BOOL) hasAppMemory;
- (NSString*) appMemory;
- (AppEnterForeBackgroundMsgBuilder*) setAppMemory:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearAppMemory;

- (BOOL) hasAvalibleMemory;
- (NSString*) avalibleMemory;
- (AppEnterForeBackgroundMsgBuilder*) setAvalibleMemory:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearAvalibleMemory;

- (BOOL) hasAvalibleDisk;
- (NSString*) avalibleDisk;
- (AppEnterForeBackgroundMsgBuilder*) setAvalibleDisk:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearAvalibleDisk;

- (BOOL) hasChannel;
- (NSString*) channel;
- (AppEnterForeBackgroundMsgBuilder*) setChannel:(NSString*) value;
- (AppEnterForeBackgroundMsgBuilder*) clearChannel;
@end

#define ButtonViewMsg_eventName @"eventName"
#define ButtonViewMsg_eventTime @"eventTime"
#define ButtonViewMsg_sessionId @"sessionId"
#define ButtonViewMsg_appKey @"appKey"
#define ButtonViewMsg_deviceId @"deviceId"
#define ButtonViewMsg_page @"page"
#define ButtonViewMsg_view @"view"
#define ButtonViewMsg_item @"item"
@interface ButtonViewMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasView_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  ViewItem* view;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasView;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) ViewItem* view;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ButtonViewMsgBuilder*) builder;
+ (ButtonViewMsgBuilder*) builder;
+ (ButtonViewMsgBuilder*) builderWithPrototype:(ButtonViewMsg*) prototype;
- (ButtonViewMsgBuilder*) toBuilder;

+ (ButtonViewMsg*) parseFromData:(NSData*) data;
+ (ButtonViewMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ButtonViewMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ButtonViewMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ButtonViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ButtonViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ButtonViewMsgBuilder : PBGeneratedMessageBuilder {
@private
  ButtonViewMsg* resultButtonViewMsg;
}

- (ButtonViewMsg*) defaultInstance;

- (ButtonViewMsgBuilder*) clear;
- (ButtonViewMsgBuilder*) clone;

- (ButtonViewMsg*) build;
- (ButtonViewMsg*) buildPartial;

- (ButtonViewMsgBuilder*) mergeFrom:(ButtonViewMsg*) other;
- (ButtonViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ButtonViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ButtonViewMsgBuilder*) setEventName:(NSString*) value;
- (ButtonViewMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ButtonViewMsgBuilder*) setEventTime:(NSString*) value;
- (ButtonViewMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ButtonViewMsgBuilder*) setSessionId:(NSString*) value;
- (ButtonViewMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ButtonViewMsgBuilder*) setAppKey:(NSString*) value;
- (ButtonViewMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ButtonViewMsgBuilder*) setDeviceId:(NSString*) value;
- (ButtonViewMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (ButtonViewMsgBuilder*) setPage:(NSString*) value;
- (ButtonViewMsgBuilder*) clearPage;

- (BOOL) hasView;
- (ViewItem*) view;
- (ButtonViewMsgBuilder*) setView:(ViewItem*) value;
- (ButtonViewMsgBuilder*) setViewBuilder:(ViewItemBuilder*) builderForValue;
- (ButtonViewMsgBuilder*) mergeView:(ViewItem*) value;
- (ButtonViewMsgBuilder*) clearView;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (ButtonViewMsgBuilder *)addItem:(MapItem*)value;
- (ButtonViewMsgBuilder *)setItemArray:(NSArray *)array;
- (ButtonViewMsgBuilder *)clearItem;
@end

#define ListItemClickMsg_eventName @"eventName"
#define ListItemClickMsg_eventTime @"eventTime"
#define ListItemClickMsg_sessionId @"sessionId"
#define ListItemClickMsg_appKey @"appKey"
#define ListItemClickMsg_deviceId @"deviceId"
#define ListItemClickMsg_page @"page"
#define ListItemClickMsg_indexPath @"indexPath"
#define ListItemClickMsg_view @"view"
#define ListItemClickMsg_item @"item"
@interface ListItemClickMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasIndexPath_:1;
  BOOL hasView_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  NSString* indexPath;
  ViewItem* view;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasIndexPath;
- (BOOL) hasView;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) NSString* indexPath;
@property (readonly, strong) ViewItem* view;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ListItemClickMsgBuilder*) builder;
+ (ListItemClickMsgBuilder*) builder;
+ (ListItemClickMsgBuilder*) builderWithPrototype:(ListItemClickMsg*) prototype;
- (ListItemClickMsgBuilder*) toBuilder;

+ (ListItemClickMsg*) parseFromData:(NSData*) data;
+ (ListItemClickMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ListItemClickMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ListItemClickMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ListItemClickMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ListItemClickMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ListItemClickMsgBuilder : PBGeneratedMessageBuilder {
@private
  ListItemClickMsg* resultListItemClickMsg;
}

- (ListItemClickMsg*) defaultInstance;

- (ListItemClickMsgBuilder*) clear;
- (ListItemClickMsgBuilder*) clone;

- (ListItemClickMsg*) build;
- (ListItemClickMsg*) buildPartial;

- (ListItemClickMsgBuilder*) mergeFrom:(ListItemClickMsg*) other;
- (ListItemClickMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ListItemClickMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ListItemClickMsgBuilder*) setEventName:(NSString*) value;
- (ListItemClickMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ListItemClickMsgBuilder*) setEventTime:(NSString*) value;
- (ListItemClickMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ListItemClickMsgBuilder*) setSessionId:(NSString*) value;
- (ListItemClickMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ListItemClickMsgBuilder*) setAppKey:(NSString*) value;
- (ListItemClickMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ListItemClickMsgBuilder*) setDeviceId:(NSString*) value;
- (ListItemClickMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (ListItemClickMsgBuilder*) setPage:(NSString*) value;
- (ListItemClickMsgBuilder*) clearPage;

- (BOOL) hasIndexPath;
- (NSString*) indexPath;
- (ListItemClickMsgBuilder*) setIndexPath:(NSString*) value;
- (ListItemClickMsgBuilder*) clearIndexPath;

- (BOOL) hasView;
- (ViewItem*) view;
- (ListItemClickMsgBuilder*) setView:(ViewItem*) value;
- (ListItemClickMsgBuilder*) setViewBuilder:(ViewItemBuilder*) builderForValue;
- (ListItemClickMsgBuilder*) mergeView:(ViewItem*) value;
- (ListItemClickMsgBuilder*) clearView;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (ListItemClickMsgBuilder *)addItem:(MapItem*)value;
- (ListItemClickMsgBuilder *)setItemArray:(NSArray *)array;
- (ListItemClickMsgBuilder *)clearItem;
@end

#define ScrollViewMsg_eventName @"eventName"
#define ScrollViewMsg_eventTime @"eventTime"
#define ScrollViewMsg_sessionId @"sessionId"
#define ScrollViewMsg_appKey @"appKey"
#define ScrollViewMsg_deviceId @"deviceId"
#define ScrollViewMsg_page @"page"
#define ScrollViewMsg_direction @"direction"
#define ScrollViewMsg_scale @"scale"
#define ScrollViewMsg_view @"view"
@interface ScrollViewMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasDirection_:1;
  BOOL hasScale_:1;
  BOOL hasView_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  NSString* direction;
  NSString* scale;
  ViewItem* view;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasDirection;
- (BOOL) hasScale;
- (BOOL) hasView;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) NSString* direction;
@property (readonly, strong) NSString* scale;
@property (readonly, strong) ViewItem* view;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ScrollViewMsgBuilder*) builder;
+ (ScrollViewMsgBuilder*) builder;
+ (ScrollViewMsgBuilder*) builderWithPrototype:(ScrollViewMsg*) prototype;
- (ScrollViewMsgBuilder*) toBuilder;

+ (ScrollViewMsg*) parseFromData:(NSData*) data;
+ (ScrollViewMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ScrollViewMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ScrollViewMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ScrollViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ScrollViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ScrollViewMsgBuilder : PBGeneratedMessageBuilder {
@private
  ScrollViewMsg* resultScrollViewMsg;
}

- (ScrollViewMsg*) defaultInstance;

- (ScrollViewMsgBuilder*) clear;
- (ScrollViewMsgBuilder*) clone;

- (ScrollViewMsg*) build;
- (ScrollViewMsg*) buildPartial;

- (ScrollViewMsgBuilder*) mergeFrom:(ScrollViewMsg*) other;
- (ScrollViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ScrollViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ScrollViewMsgBuilder*) setEventName:(NSString*) value;
- (ScrollViewMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ScrollViewMsgBuilder*) setEventTime:(NSString*) value;
- (ScrollViewMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ScrollViewMsgBuilder*) setSessionId:(NSString*) value;
- (ScrollViewMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ScrollViewMsgBuilder*) setAppKey:(NSString*) value;
- (ScrollViewMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ScrollViewMsgBuilder*) setDeviceId:(NSString*) value;
- (ScrollViewMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (ScrollViewMsgBuilder*) setPage:(NSString*) value;
- (ScrollViewMsgBuilder*) clearPage;

- (BOOL) hasDirection;
- (NSString*) direction;
- (ScrollViewMsgBuilder*) setDirection:(NSString*) value;
- (ScrollViewMsgBuilder*) clearDirection;

- (BOOL) hasScale;
- (NSString*) scale;
- (ScrollViewMsgBuilder*) setScale:(NSString*) value;
- (ScrollViewMsgBuilder*) clearScale;

- (BOOL) hasView;
- (ViewItem*) view;
- (ScrollViewMsgBuilder*) setView:(ViewItem*) value;
- (ScrollViewMsgBuilder*) setViewBuilder:(ViewItemBuilder*) builderForValue;
- (ScrollViewMsgBuilder*) mergeView:(ViewItem*) value;
- (ScrollViewMsgBuilder*) clearView;
@end

#define ViewScrollMsg_eventName @"eventName"
#define ViewScrollMsg_eventTime @"eventTime"
#define ViewScrollMsg_sessionId @"sessionId"
#define ViewScrollMsg_appKey @"appKey"
#define ViewScrollMsg_deviceId @"deviceId"
#define ViewScrollMsg_page @"page"
#define ViewScrollMsg_direction @"direction"
@interface ViewScrollMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasDirection_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  NSString* direction;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasDirection;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) NSString* direction;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ViewScrollMsgBuilder*) builder;
+ (ViewScrollMsgBuilder*) builder;
+ (ViewScrollMsgBuilder*) builderWithPrototype:(ViewScrollMsg*) prototype;
- (ViewScrollMsgBuilder*) toBuilder;

+ (ViewScrollMsg*) parseFromData:(NSData*) data;
+ (ViewScrollMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ViewScrollMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ViewScrollMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ViewScrollMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ViewScrollMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ViewScrollMsgBuilder : PBGeneratedMessageBuilder {
@private
  ViewScrollMsg* resultViewScrollMsg;
}

- (ViewScrollMsg*) defaultInstance;

- (ViewScrollMsgBuilder*) clear;
- (ViewScrollMsgBuilder*) clone;

- (ViewScrollMsg*) build;
- (ViewScrollMsg*) buildPartial;

- (ViewScrollMsgBuilder*) mergeFrom:(ViewScrollMsg*) other;
- (ViewScrollMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ViewScrollMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ViewScrollMsgBuilder*) setEventName:(NSString*) value;
- (ViewScrollMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ViewScrollMsgBuilder*) setEventTime:(NSString*) value;
- (ViewScrollMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ViewScrollMsgBuilder*) setSessionId:(NSString*) value;
- (ViewScrollMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ViewScrollMsgBuilder*) setAppKey:(NSString*) value;
- (ViewScrollMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ViewScrollMsgBuilder*) setDeviceId:(NSString*) value;
- (ViewScrollMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (ViewScrollMsgBuilder*) setPage:(NSString*) value;
- (ViewScrollMsgBuilder*) clearPage;

- (BOOL) hasDirection;
- (NSString*) direction;
- (ViewScrollMsgBuilder*) setDirection:(NSString*) value;
- (ViewScrollMsgBuilder*) clearDirection;
@end

#define PageMsg_eventName @"eventName"
#define PageMsg_eventTime @"eventTime"
#define PageMsg_sessionId @"sessionId"
#define PageMsg_appKey @"appKey"
#define PageMsg_deviceId @"deviceId"
#define PageMsg_page @"page"
#define PageMsg_item @"item"
@interface PageMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PageMsgBuilder*) builder;
+ (PageMsgBuilder*) builder;
+ (PageMsgBuilder*) builderWithPrototype:(PageMsg*) prototype;
- (PageMsgBuilder*) toBuilder;

+ (PageMsg*) parseFromData:(NSData*) data;
+ (PageMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageMsg*) parseFromInputStream:(NSInputStream*) input;
+ (PageMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PageMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PageMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PageMsgBuilder : PBGeneratedMessageBuilder {
@private
  PageMsg* resultPageMsg;
}

- (PageMsg*) defaultInstance;

- (PageMsgBuilder*) clear;
- (PageMsgBuilder*) clone;

- (PageMsg*) build;
- (PageMsg*) buildPartial;

- (PageMsgBuilder*) mergeFrom:(PageMsg*) other;
- (PageMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PageMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (PageMsgBuilder*) setEventName:(NSString*) value;
- (PageMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (PageMsgBuilder*) setEventTime:(NSString*) value;
- (PageMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (PageMsgBuilder*) setSessionId:(NSString*) value;
- (PageMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (PageMsgBuilder*) setAppKey:(NSString*) value;
- (PageMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (PageMsgBuilder*) setDeviceId:(NSString*) value;
- (PageMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (PageMsgBuilder*) setPage:(NSString*) value;
- (PageMsgBuilder*) clearPage;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (PageMsgBuilder *)addItem:(MapItem*)value;
- (PageMsgBuilder *)setItemArray:(NSArray *)array;
- (PageMsgBuilder *)clearItem;
@end

#define WebViewMsg_eventName @"eventName"
#define WebViewMsg_eventTime @"eventTime"
#define WebViewMsg_sessionId @"sessionId"
#define WebViewMsg_appKey @"appKey"
#define WebViewMsg_deviceId @"deviceId"
#define WebViewMsg_page @"page"
#define WebViewMsg_url @"url"
#define WebViewMsg_error @"error"
#define WebViewMsg_view @"view"
@interface WebViewMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasUrl_:1;
  BOOL hasError_:1;
  BOOL hasView_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  NSString* url;
  NSString* error;
  ViewItem* view;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasUrl;
- (BOOL) hasError;
- (BOOL) hasView;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) NSString* url;
@property (readonly, strong) NSString* error;
@property (readonly, strong) ViewItem* view;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WebViewMsgBuilder*) builder;
+ (WebViewMsgBuilder*) builder;
+ (WebViewMsgBuilder*) builderWithPrototype:(WebViewMsg*) prototype;
- (WebViewMsgBuilder*) toBuilder;

+ (WebViewMsg*) parseFromData:(NSData*) data;
+ (WebViewMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WebViewMsg*) parseFromInputStream:(NSInputStream*) input;
+ (WebViewMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WebViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WebViewMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WebViewMsgBuilder : PBGeneratedMessageBuilder {
@private
  WebViewMsg* resultWebViewMsg;
}

- (WebViewMsg*) defaultInstance;

- (WebViewMsgBuilder*) clear;
- (WebViewMsgBuilder*) clone;

- (WebViewMsg*) build;
- (WebViewMsg*) buildPartial;

- (WebViewMsgBuilder*) mergeFrom:(WebViewMsg*) other;
- (WebViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WebViewMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (WebViewMsgBuilder*) setEventName:(NSString*) value;
- (WebViewMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (WebViewMsgBuilder*) setEventTime:(NSString*) value;
- (WebViewMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (WebViewMsgBuilder*) setSessionId:(NSString*) value;
- (WebViewMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (WebViewMsgBuilder*) setAppKey:(NSString*) value;
- (WebViewMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (WebViewMsgBuilder*) setDeviceId:(NSString*) value;
- (WebViewMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (WebViewMsgBuilder*) setPage:(NSString*) value;
- (WebViewMsgBuilder*) clearPage;

- (BOOL) hasUrl;
- (NSString*) url;
- (WebViewMsgBuilder*) setUrl:(NSString*) value;
- (WebViewMsgBuilder*) clearUrl;

- (BOOL) hasError;
- (NSString*) error;
- (WebViewMsgBuilder*) setError:(NSString*) value;
- (WebViewMsgBuilder*) clearError;

- (BOOL) hasView;
- (ViewItem*) view;
- (WebViewMsgBuilder*) setView:(ViewItem*) value;
- (WebViewMsgBuilder*) setViewBuilder:(ViewItemBuilder*) builderForValue;
- (WebViewMsgBuilder*) mergeView:(ViewItem*) value;
- (WebViewMsgBuilder*) clearView;
@end

#define AppUrlMsg_eventName @"eventName"
#define AppUrlMsg_eventTime @"eventTime"
#define AppUrlMsg_sessionId @"sessionId"
#define AppUrlMsg_appKey @"appKey"
#define AppUrlMsg_deviceId @"deviceId"
#define AppUrlMsg_url @"url"
#define AppUrlMsg_succeed @"succeed"
@interface AppUrlMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasUrl_:1;
  BOOL hasSucceed_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* url;
  NSString* succeed;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasUrl;
- (BOOL) hasSucceed;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* url;
@property (readonly, strong) NSString* succeed;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AppUrlMsgBuilder*) builder;
+ (AppUrlMsgBuilder*) builder;
+ (AppUrlMsgBuilder*) builderWithPrototype:(AppUrlMsg*) prototype;
- (AppUrlMsgBuilder*) toBuilder;

+ (AppUrlMsg*) parseFromData:(NSData*) data;
+ (AppUrlMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppUrlMsg*) parseFromInputStream:(NSInputStream*) input;
+ (AppUrlMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppUrlMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AppUrlMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AppUrlMsgBuilder : PBGeneratedMessageBuilder {
@private
  AppUrlMsg* resultAppUrlMsg;
}

- (AppUrlMsg*) defaultInstance;

- (AppUrlMsgBuilder*) clear;
- (AppUrlMsgBuilder*) clone;

- (AppUrlMsg*) build;
- (AppUrlMsg*) buildPartial;

- (AppUrlMsgBuilder*) mergeFrom:(AppUrlMsg*) other;
- (AppUrlMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AppUrlMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (AppUrlMsgBuilder*) setEventName:(NSString*) value;
- (AppUrlMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (AppUrlMsgBuilder*) setEventTime:(NSString*) value;
- (AppUrlMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (AppUrlMsgBuilder*) setSessionId:(NSString*) value;
- (AppUrlMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (AppUrlMsgBuilder*) setAppKey:(NSString*) value;
- (AppUrlMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AppUrlMsgBuilder*) setDeviceId:(NSString*) value;
- (AppUrlMsgBuilder*) clearDeviceId;

- (BOOL) hasUrl;
- (NSString*) url;
- (AppUrlMsgBuilder*) setUrl:(NSString*) value;
- (AppUrlMsgBuilder*) clearUrl;

- (BOOL) hasSucceed;
- (NSString*) succeed;
- (AppUrlMsgBuilder*) setSucceed:(NSString*) value;
- (AppUrlMsgBuilder*) clearSucceed;
@end

#define UserOptionalMsg_eventName @"eventName"
#define UserOptionalMsg_eventTime @"eventTime"
#define UserOptionalMsg_sessionId @"sessionId"
#define UserOptionalMsg_appKey @"appKey"
#define UserOptionalMsg_deviceId @"deviceId"
#define UserOptionalMsg_item @"item"
@interface UserOptionalMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserOptionalMsgBuilder*) builder;
+ (UserOptionalMsgBuilder*) builder;
+ (UserOptionalMsgBuilder*) builderWithPrototype:(UserOptionalMsg*) prototype;
- (UserOptionalMsgBuilder*) toBuilder;

+ (UserOptionalMsg*) parseFromData:(NSData*) data;
+ (UserOptionalMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserOptionalMsg*) parseFromInputStream:(NSInputStream*) input;
+ (UserOptionalMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserOptionalMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserOptionalMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserOptionalMsgBuilder : PBGeneratedMessageBuilder {
@private
  UserOptionalMsg* resultUserOptionalMsg;
}

- (UserOptionalMsg*) defaultInstance;

- (UserOptionalMsgBuilder*) clear;
- (UserOptionalMsgBuilder*) clone;

- (UserOptionalMsg*) build;
- (UserOptionalMsg*) buildPartial;

- (UserOptionalMsgBuilder*) mergeFrom:(UserOptionalMsg*) other;
- (UserOptionalMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserOptionalMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (UserOptionalMsgBuilder*) setEventName:(NSString*) value;
- (UserOptionalMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (UserOptionalMsgBuilder*) setEventTime:(NSString*) value;
- (UserOptionalMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (UserOptionalMsgBuilder*) setSessionId:(NSString*) value;
- (UserOptionalMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (UserOptionalMsgBuilder*) setAppKey:(NSString*) value;
- (UserOptionalMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (UserOptionalMsgBuilder*) setDeviceId:(NSString*) value;
- (UserOptionalMsgBuilder*) clearDeviceId;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (UserOptionalMsgBuilder *)addItem:(MapItem*)value;
- (UserOptionalMsgBuilder *)setItemArray:(NSArray *)array;
- (UserOptionalMsgBuilder *)clearItem;
@end

#define AppInstallationMsg_eventName @"eventName"
#define AppInstallationMsg_eventTime @"eventTime"
#define AppInstallationMsg_sessionId @"sessionId"
#define AppInstallationMsg_appKey @"appKey"
#define AppInstallationMsg_deviceId @"deviceId"
#define AppInstallationMsg_item @"item"
@interface AppInstallationMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AppInstallationMsgBuilder*) builder;
+ (AppInstallationMsgBuilder*) builder;
+ (AppInstallationMsgBuilder*) builderWithPrototype:(AppInstallationMsg*) prototype;
- (AppInstallationMsgBuilder*) toBuilder;

+ (AppInstallationMsg*) parseFromData:(NSData*) data;
+ (AppInstallationMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppInstallationMsg*) parseFromInputStream:(NSInputStream*) input;
+ (AppInstallationMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AppInstallationMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AppInstallationMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AppInstallationMsgBuilder : PBGeneratedMessageBuilder {
@private
  AppInstallationMsg* resultAppInstallationMsg;
}

- (AppInstallationMsg*) defaultInstance;

- (AppInstallationMsgBuilder*) clear;
- (AppInstallationMsgBuilder*) clone;

- (AppInstallationMsg*) build;
- (AppInstallationMsg*) buildPartial;

- (AppInstallationMsgBuilder*) mergeFrom:(AppInstallationMsg*) other;
- (AppInstallationMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AppInstallationMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (AppInstallationMsgBuilder*) setEventName:(NSString*) value;
- (AppInstallationMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (AppInstallationMsgBuilder*) setEventTime:(NSString*) value;
- (AppInstallationMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (AppInstallationMsgBuilder*) setSessionId:(NSString*) value;
- (AppInstallationMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (AppInstallationMsgBuilder*) setAppKey:(NSString*) value;
- (AppInstallationMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AppInstallationMsgBuilder*) setDeviceId:(NSString*) value;
- (AppInstallationMsgBuilder*) clearDeviceId;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (AppInstallationMsgBuilder *)addItem:(MapItem*)value;
- (AppInstallationMsgBuilder *)setItemArray:(NSArray *)array;
- (AppInstallationMsgBuilder *)clearItem;
@end

#define PushMsg_eventName @"eventName"
#define PushMsg_eventTime @"eventTime"
#define PushMsg_sessionId @"sessionId"
#define PushMsg_appKey @"appKey"
#define PushMsg_deviceId @"deviceId"
#define PushMsg_content @"content"
#define PushMsg_uri @"uri"
#define PushMsg_jobId @"jobId"
#define PushMsg_item @"item"
@interface PushMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasContent_:1;
  BOOL hasUri_:1;
  BOOL hasJobId_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* content;
  NSString* uri;
  NSString* jobId;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasContent;
- (BOOL) hasUri;
- (BOOL) hasJobId;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* content;
@property (readonly, strong) NSString* uri;
@property (readonly, strong) NSString* jobId;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PushMsgBuilder*) builder;
+ (PushMsgBuilder*) builder;
+ (PushMsgBuilder*) builderWithPrototype:(PushMsg*) prototype;
- (PushMsgBuilder*) toBuilder;

+ (PushMsg*) parseFromData:(NSData*) data;
+ (PushMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushMsg*) parseFromInputStream:(NSInputStream*) input;
+ (PushMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PushMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PushMsgBuilder : PBGeneratedMessageBuilder {
@private
  PushMsg* resultPushMsg;
}

- (PushMsg*) defaultInstance;

- (PushMsgBuilder*) clear;
- (PushMsgBuilder*) clone;

- (PushMsg*) build;
- (PushMsg*) buildPartial;

- (PushMsgBuilder*) mergeFrom:(PushMsg*) other;
- (PushMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PushMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (PushMsgBuilder*) setEventName:(NSString*) value;
- (PushMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (PushMsgBuilder*) setEventTime:(NSString*) value;
- (PushMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (PushMsgBuilder*) setSessionId:(NSString*) value;
- (PushMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (PushMsgBuilder*) setAppKey:(NSString*) value;
- (PushMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (PushMsgBuilder*) setDeviceId:(NSString*) value;
- (PushMsgBuilder*) clearDeviceId;

- (BOOL) hasContent;
- (NSString*) content;
- (PushMsgBuilder*) setContent:(NSString*) value;
- (PushMsgBuilder*) clearContent;

- (BOOL) hasUri;
- (NSString*) uri;
- (PushMsgBuilder*) setUri:(NSString*) value;
- (PushMsgBuilder*) clearUri;

- (BOOL) hasJobId;
- (NSString*) jobId;
- (PushMsgBuilder*) setJobId:(NSString*) value;
- (PushMsgBuilder*) clearJobId;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (PushMsgBuilder *)addItem:(MapItem*)value;
- (PushMsgBuilder *)setItemArray:(NSArray *)array;
- (PushMsgBuilder *)clearItem;
@end

#define ABTestMsg_eventName @"eventName"
#define ABTestMsg_eventTime @"eventTime"
#define ABTestMsg_sessionId @"sessionId"
#define ABTestMsg_appKey @"appKey"
#define ABTestMsg_deviceId @"deviceId"
#define ABTestMsg_content @"content"
#define ABTestMsg_item @"item"
@interface ABTestMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasContent_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* content;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasContent;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* content;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ABTestMsgBuilder*) builder;
+ (ABTestMsgBuilder*) builder;
+ (ABTestMsgBuilder*) builderWithPrototype:(ABTestMsg*) prototype;
- (ABTestMsgBuilder*) toBuilder;

+ (ABTestMsg*) parseFromData:(NSData*) data;
+ (ABTestMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ABTestMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ABTestMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ABTestMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ABTestMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ABTestMsgBuilder : PBGeneratedMessageBuilder {
@private
  ABTestMsg* resultAbtestMsg;
}

- (ABTestMsg*) defaultInstance;

- (ABTestMsgBuilder*) clear;
- (ABTestMsgBuilder*) clone;

- (ABTestMsg*) build;
- (ABTestMsg*) buildPartial;

- (ABTestMsgBuilder*) mergeFrom:(ABTestMsg*) other;
- (ABTestMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ABTestMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ABTestMsgBuilder*) setEventName:(NSString*) value;
- (ABTestMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ABTestMsgBuilder*) setEventTime:(NSString*) value;
- (ABTestMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ABTestMsgBuilder*) setSessionId:(NSString*) value;
- (ABTestMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ABTestMsgBuilder*) setAppKey:(NSString*) value;
- (ABTestMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ABTestMsgBuilder*) setDeviceId:(NSString*) value;
- (ABTestMsgBuilder*) clearDeviceId;

- (BOOL) hasContent;
- (NSString*) content;
- (ABTestMsgBuilder*) setContent:(NSString*) value;
- (ABTestMsgBuilder*) clearContent;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (ABTestMsgBuilder *)addItem:(MapItem*)value;
- (ABTestMsgBuilder *)setItemArray:(NSArray *)array;
- (ABTestMsgBuilder *)clearItem;
@end

#define LocationMsg_eventName @"eventName"
#define LocationMsg_eventTime @"eventTime"
#define LocationMsg_sessionId @"sessionId"
#define LocationMsg_appKey @"appKey"
#define LocationMsg_deviceId @"deviceId"
#define LocationMsg_longitude @"longitude"
#define LocationMsg_latitude @"latitude"
#define LocationMsg_altitude @"altitude"
#define LocationMsg_accuracy @"accuracy"
#define LocationMsg_provider @"provider"
#define LocationMsg_item @"item"
@interface LocationMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasLongitude_:1;
  BOOL hasLatitude_:1;
  BOOL hasAltitude_:1;
  BOOL hasAccuracy_:1;
  BOOL hasProvider_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* longitude;
  NSString* latitude;
  NSString* altitude;
  NSString* accuracy;
  NSString* provider;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasLongitude;
- (BOOL) hasLatitude;
- (BOOL) hasAltitude;
- (BOOL) hasAccuracy;
- (BOOL) hasProvider;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* longitude;
@property (readonly, strong) NSString* latitude;
@property (readonly, strong) NSString* altitude;
@property (readonly, strong) NSString* accuracy;
@property (readonly, strong) NSString* provider;
@property (readonly, strong) NSArray * item;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LocationMsgBuilder*) builder;
+ (LocationMsgBuilder*) builder;
+ (LocationMsgBuilder*) builderWithPrototype:(LocationMsg*) prototype;
- (LocationMsgBuilder*) toBuilder;

+ (LocationMsg*) parseFromData:(NSData*) data;
+ (LocationMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationMsg*) parseFromInputStream:(NSInputStream*) input;
+ (LocationMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LocationMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LocationMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LocationMsgBuilder : PBGeneratedMessageBuilder {
@private
  LocationMsg* resultLocationMsg;
}

- (LocationMsg*) defaultInstance;

- (LocationMsgBuilder*) clear;
- (LocationMsgBuilder*) clone;

- (LocationMsg*) build;
- (LocationMsg*) buildPartial;

- (LocationMsgBuilder*) mergeFrom:(LocationMsg*) other;
- (LocationMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LocationMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (LocationMsgBuilder*) setEventName:(NSString*) value;
- (LocationMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (LocationMsgBuilder*) setEventTime:(NSString*) value;
- (LocationMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (LocationMsgBuilder*) setSessionId:(NSString*) value;
- (LocationMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (LocationMsgBuilder*) setAppKey:(NSString*) value;
- (LocationMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (LocationMsgBuilder*) setDeviceId:(NSString*) value;
- (LocationMsgBuilder*) clearDeviceId;

- (BOOL) hasLongitude;
- (NSString*) longitude;
- (LocationMsgBuilder*) setLongitude:(NSString*) value;
- (LocationMsgBuilder*) clearLongitude;

- (BOOL) hasLatitude;
- (NSString*) latitude;
- (LocationMsgBuilder*) setLatitude:(NSString*) value;
- (LocationMsgBuilder*) clearLatitude;

- (BOOL) hasAltitude;
- (NSString*) altitude;
- (LocationMsgBuilder*) setAltitude:(NSString*) value;
- (LocationMsgBuilder*) clearAltitude;

- (BOOL) hasAccuracy;
- (NSString*) accuracy;
- (LocationMsgBuilder*) setAccuracy:(NSString*) value;
- (LocationMsgBuilder*) clearAccuracy;

- (BOOL) hasProvider;
- (NSString*) provider;
- (LocationMsgBuilder*) setProvider:(NSString*) value;
- (LocationMsgBuilder*) clearProvider;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (LocationMsgBuilder *)addItem:(MapItem*)value;
- (LocationMsgBuilder *)setItemArray:(NSArray *)array;
- (LocationMsgBuilder *)clearItem;
@end

#define ListScanningMsg_eventName @"eventName"
#define ListScanningMsg_eventTime @"eventTime"
#define ListScanningMsg_sessionId @"sessionId"
#define ListScanningMsg_appKey @"appKey"
#define ListScanningMsg_deviceId @"deviceId"
#define ListScanningMsg_page @"page"
#define ListScanningMsg_view @"view"
#define ListScanningMsg_show @"show"
#define ListScanningMsg_hide @"hide"
#define ListScanningMsg_item @"item"
@interface ListScanningMsg : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventName_:1;
  BOOL hasEventTime_:1;
  BOOL hasSessionId_:1;
  BOOL hasAppKey_:1;
  BOOL hasDeviceId_:1;
  BOOL hasPage_:1;
  BOOL hasView_:1;
  NSString* eventName;
  NSString* eventTime;
  NSString* sessionId;
  NSString* appKey;
  NSString* deviceId;
  NSString* page;
  ViewItem* view;
  NSMutableArray * showArray;
  NSMutableArray * hideArray;
  NSMutableArray * itemArray;
}
- (BOOL) hasEventName;
- (BOOL) hasEventTime;
- (BOOL) hasSessionId;
- (BOOL) hasAppKey;
- (BOOL) hasDeviceId;
- (BOOL) hasPage;
- (BOOL) hasView;
@property (readonly, strong) NSString* eventName;
@property (readonly, strong) NSString* eventTime;
@property (readonly, strong) NSString* sessionId;
@property (readonly, strong) NSString* appKey;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* page;
@property (readonly, strong) ViewItem* view;
@property (readonly, strong) NSArray * show;
@property (readonly, strong) NSArray * hide;
@property (readonly, strong) NSArray * item;
- (MapItem*)showAtIndex:(NSUInteger)index;
- (MapItem*)hideAtIndex:(NSUInteger)index;
- (MapItem*)itemAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ListScanningMsgBuilder*) builder;
+ (ListScanningMsgBuilder*) builder;
+ (ListScanningMsgBuilder*) builderWithPrototype:(ListScanningMsg*) prototype;
- (ListScanningMsgBuilder*) toBuilder;

+ (ListScanningMsg*) parseFromData:(NSData*) data;
+ (ListScanningMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ListScanningMsg*) parseFromInputStream:(NSInputStream*) input;
+ (ListScanningMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ListScanningMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ListScanningMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ListScanningMsgBuilder : PBGeneratedMessageBuilder {
@private
  ListScanningMsg* resultListScanningMsg;
}

- (ListScanningMsg*) defaultInstance;

- (ListScanningMsgBuilder*) clear;
- (ListScanningMsgBuilder*) clone;

- (ListScanningMsg*) build;
- (ListScanningMsg*) buildPartial;

- (ListScanningMsgBuilder*) mergeFrom:(ListScanningMsg*) other;
- (ListScanningMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ListScanningMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventName;
- (NSString*) eventName;
- (ListScanningMsgBuilder*) setEventName:(NSString*) value;
- (ListScanningMsgBuilder*) clearEventName;

- (BOOL) hasEventTime;
- (NSString*) eventTime;
- (ListScanningMsgBuilder*) setEventTime:(NSString*) value;
- (ListScanningMsgBuilder*) clearEventTime;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (ListScanningMsgBuilder*) setSessionId:(NSString*) value;
- (ListScanningMsgBuilder*) clearSessionId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (ListScanningMsgBuilder*) setAppKey:(NSString*) value;
- (ListScanningMsgBuilder*) clearAppKey;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (ListScanningMsgBuilder*) setDeviceId:(NSString*) value;
- (ListScanningMsgBuilder*) clearDeviceId;

- (BOOL) hasPage;
- (NSString*) page;
- (ListScanningMsgBuilder*) setPage:(NSString*) value;
- (ListScanningMsgBuilder*) clearPage;

- (BOOL) hasView;
- (ViewItem*) view;
- (ListScanningMsgBuilder*) setView:(ViewItem*) value;
- (ListScanningMsgBuilder*) setViewBuilder:(ViewItemBuilder*) builderForValue;
- (ListScanningMsgBuilder*) mergeView:(ViewItem*) value;
- (ListScanningMsgBuilder*) clearView;

- (NSMutableArray *)show;
- (MapItem*)showAtIndex:(NSUInteger)index;
- (ListScanningMsgBuilder *)addShow:(MapItem*)value;
- (ListScanningMsgBuilder *)setShowArray:(NSArray *)array;
- (ListScanningMsgBuilder *)clearShow;

- (NSMutableArray *)hide;
- (MapItem*)hideAtIndex:(NSUInteger)index;
- (ListScanningMsgBuilder *)addHide:(MapItem*)value;
- (ListScanningMsgBuilder *)setHideArray:(NSArray *)array;
- (ListScanningMsgBuilder *)clearHide;

- (NSMutableArray *)item;
- (MapItem*)itemAtIndex:(NSUInteger)index;
- (ListScanningMsgBuilder *)addItem:(MapItem*)value;
- (ListScanningMsgBuilder *)setItemArray:(NSArray *)array;
- (ListScanningMsgBuilder *)clearItem;
@end

#define ViewItem_viewClass @"viewClass"
#define ViewItem_path @"path"
#define ViewItem_frame @"frame"
#define ViewItem_title @"title"
#define ViewItem_depthPath @"depthPath"
#define ViewItem_viewId @"viewId"
@interface ViewItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasViewClass_:1;
  BOOL hasPath_:1;
  BOOL hasFrame_:1;
  BOOL hasTitle_:1;
  BOOL hasDepthPath_:1;
  BOOL hasViewId_:1;
  NSString* viewClass;
  NSString* path;
  NSString* frame;
  NSString* title;
  NSString* depthPath;
  NSString* viewId;
}
- (BOOL) hasViewClass;
- (BOOL) hasPath;
- (BOOL) hasFrame;
- (BOOL) hasTitle;
- (BOOL) hasDepthPath;
- (BOOL) hasViewId;
@property (readonly, strong) NSString* viewClass;
@property (readonly, strong) NSString* path;
@property (readonly, strong) NSString* frame;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* depthPath;
@property (readonly, strong) NSString* viewId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ViewItemBuilder*) builder;
+ (ViewItemBuilder*) builder;
+ (ViewItemBuilder*) builderWithPrototype:(ViewItem*) prototype;
- (ViewItemBuilder*) toBuilder;

+ (ViewItem*) parseFromData:(NSData*) data;
+ (ViewItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ViewItem*) parseFromInputStream:(NSInputStream*) input;
+ (ViewItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ViewItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ViewItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ViewItemBuilder : PBGeneratedMessageBuilder {
@private
  ViewItem* resultViewItem;
}

- (ViewItem*) defaultInstance;

- (ViewItemBuilder*) clear;
- (ViewItemBuilder*) clone;

- (ViewItem*) build;
- (ViewItem*) buildPartial;

- (ViewItemBuilder*) mergeFrom:(ViewItem*) other;
- (ViewItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ViewItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasViewClass;
- (NSString*) viewClass;
- (ViewItemBuilder*) setViewClass:(NSString*) value;
- (ViewItemBuilder*) clearViewClass;

- (BOOL) hasPath;
- (NSString*) path;
- (ViewItemBuilder*) setPath:(NSString*) value;
- (ViewItemBuilder*) clearPath;

- (BOOL) hasFrame;
- (NSString*) frame;
- (ViewItemBuilder*) setFrame:(NSString*) value;
- (ViewItemBuilder*) clearFrame;

- (BOOL) hasTitle;
- (NSString*) title;
- (ViewItemBuilder*) setTitle:(NSString*) value;
- (ViewItemBuilder*) clearTitle;

- (BOOL) hasDepthPath;
- (NSString*) depthPath;
- (ViewItemBuilder*) setDepthPath:(NSString*) value;
- (ViewItemBuilder*) clearDepthPath;

- (BOOL) hasViewId;
- (NSString*) viewId;
- (ViewItemBuilder*) setViewId:(NSString*) value;
- (ViewItemBuilder*) clearViewId;
@end

#define MapItem_key @"key"
#define MapItem_value @"value"
@interface MapItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  NSString* key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly, strong) NSString* key;
@property (readonly, strong) NSString* value;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MapItemBuilder*) builder;
+ (MapItemBuilder*) builder;
+ (MapItemBuilder*) builderWithPrototype:(MapItem*) prototype;
- (MapItemBuilder*) toBuilder;

+ (MapItem*) parseFromData:(NSData*) data;
+ (MapItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MapItem*) parseFromInputStream:(NSInputStream*) input;
+ (MapItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MapItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MapItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MapItemBuilder : PBGeneratedMessageBuilder {
@private
  MapItem* resultMapItem;
}

- (MapItem*) defaultInstance;

- (MapItemBuilder*) clear;
- (MapItemBuilder*) clone;

- (MapItem*) build;
- (MapItem*) buildPartial;

- (MapItemBuilder*) mergeFrom:(MapItem*) other;
- (MapItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MapItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (MapItemBuilder*) setKey:(NSString*) value;
- (MapItemBuilder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (MapItemBuilder*) setValue:(NSString*) value;
- (MapItemBuilder*) clearValue;
@end


// @@protoc_insertion_point(global_scope)
